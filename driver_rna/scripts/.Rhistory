plot
View(res_gse)
res_gse <- -log10(res_gse$p.adjust)
#Select enriched pathways
res_gse <- res_gseGO@result
res_gse <- res_gse %>%
filter(Description %in% c("neurotransmitter transport", "acetylcholine receptor signaling pathway", "photoreceptor cell development",
"synapse assembly", "regulation of protein secretion", "DNA metabolic process", "mitotic cell cycle",
"chromosome organization", "Wnt signaling pathway", "DNA replication" )) %>%
mutate(gene_clusters = case_when(
NES > 0  ~ 'up-regulated',
NES < 0  ~ 'down-regulated'))
res_gse$log_padjust <- -log10(res_gse$p.adjust)
View(res_gse)
plot <- ggdotchart(res_gse, x = "Description", y = "log_padjust",
color = "gene_clusters",
palette = c("#00AFBB", "#FC4E07"),
sorting = "descending",
rotate = TRUE,
group = "gene_clusters",
dot.size = 6,
add = "segments",
ggtheme = theme_pubr()
)
plot
plot1 <- ggdotchart(res_gse, x = "Description", y = "log_padjust",
color = "gene_clusters",
palette = c("#00AFBB", "#FC4E07"),
sorting = "descending",
rotate = TRUE,
group = "gene_clusters",
dot.size = 6,
add = "segments",
title = "Enrichment RGCs vs RPCs",
xlab = "Pathways",
ylab = "-log10(padjust)",
ggtheme = theme_pubr()
)
plot1
load("~/Documents/PhD_AI/sc_devil/results/fit_results/stat_test_retina_cell_types1.Rdata")
plot1 <- ggdotchart(res_gse, x = "Description", y = "log_padjust",
color = "gene_clusters",
palette = c("#00AFBB", "#FC4E07"),
sorting = "descending",
rotate = TRUE,
group = "gene_clusters",
dot.size = 6,
add = "segments",
title = "Enrichment Differentiated neurons vs RPCs",
xlab = "Pathways",
ylab = "-log10(padjust)",
ggtheme = theme_pubr()
)
plot1
load("~/Documents/PhD_AI/sc_devil/results/fit_results/stat_test_retina_cell_types2.Rdata")
View(stat_test_retina)
plot1
View(stat_test_retina)
res <- subset(stat_test_retina, lfc >= -5)
View(res)
# Filter DEG #
resSig_up <- subset(res, res$adj_pval < 0.05 & lfc > 0.5)
resSig_down <- subset(res, res$adj_pval < 0.05 & lfc < -0.5)
hs <- org.Hs.eg.db
my_symbols <- deg$name
gene_list <- AnnotationDbi::select(hs,
keys = my_symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
gene_list <- na.omit(gene_list)
# Preparing input #
gene_list <- gene_list[!duplicated(gene_list$SYMBOL),]
gene_list <- gene_list[gene_list$SYMBOL %in% deg$name,]
gene_list_rank <- as.vector(deg$lfc)
names(gene_list_rank) <- gene_list$ENTREZID
gene_list_rank <- sort(gene_list_rank, decreasing = TRUE)
res_gseGO <- gseGO(geneList = gene_list_rank, ont = "BP", OrgDb = org.Hs.eg.db,
keyType = "ENTREZID", minGSSize = 10, maxGSSize = 350)
#Select enriched pathways
res_gse <- res_gseGO@result
View(res_gse)
1.799000e-07
2.309184e-02
res_gseGO <- gseGO(geneList = gene_list_rank, ont = "MF", OrgDb = org.Hs.eg.db,
keyType = "ENTREZID", minGSSize = 10, maxGSSize = 350)
#Select enriched pathways
res_gse <- res_gseGO@result
View(res_gse)
res_gseGO <- gseGO(geneList = gene_list_rank, ont = "BP", OrgDb = org.Hs.eg.db,
keyType = "ENTREZID", minGSSize = 10, maxGSSize = 350)
#Select enriched pathways
res_gse <- res_gseGO@result
res_gse <- res_gse %>%
filter(Description %in% c("DNA metabolic process", "mitotic cell cycle", "DNA replication",
"canonical WNT signaling pathway", "chromosome organization",
"neurotrasmitter secretion", "dopamine receptor signaling pathway",
"synapse organization", "eye photoreceptor cell development","myotube cell development" )) %>%
mutate(gene_clusters = case_when(
NES > 0  ~ 'up-regulated',
NES < 0  ~ 'down-regulated'))
res_gse$log_padjust <- -log10(res_gse$p.adjust)
plot2 <- ggdotchart(res_gse, x = "Description", y = "log_padjust",
color = "gene_clusters",
palette = c("#00AFBB", "#FC4E07"),
sorting = "descending",
rotate = TRUE,
group = "gene_clusters",
dot.size = 6,
add = "segments",
title = "Enrichment RGCs vs RPCs",
xlab = "Pathways",
ylab = "-log10(padjust)",
ggtheme = theme_pubr()
)
plot2
res_gse <- res_gse %>%
filter(Description %in% c("DNA metabolic process", "mitotic cell cycle", "DNA replication",
"canonical Wnt signaling pathway", "chromosome organization",
"neurotransmitter secretion", "dopamine receptor signaling pathway",
"synapse organization", "eye photoreceptor cell development","myotube cell development" )) %>%
mutate(gene_clusters = case_when(
NES > 0  ~ 'up-regulated',
NES < 0  ~ 'down-regulated'))
res_gse$log_padjust <- -log10(res_gse$p.adjust)
plot2 <- ggdotchart(res_gse, x = "Description", y = "log_padjust",
color = "gene_clusters",
palette = c("#00AFBB", "#FC4E07"),
sorting = "descending",
rotate = TRUE,
group = "gene_clusters",
dot.size = 6,
add = "segments",
title = "Enrichment RGCs vs RPCs",
xlab = "Pathways",
ylab = "-log10(padjust)",
ggtheme = theme_pubr()
)
plot2
View(res_gseGO)
#Select enriched pathways
res_gse <- res_gseGO@result
res_gse <- res_gse %>%
filter(Description %in% c("DNA metabolic process", "mitotic cell cycle", "DNA replication",
"canonical Wnt signaling pathway", "chromosome organization",
"neurotransmitter secretion", "dopamine receptor signaling pathway",
"synapse organization", "eye photoreceptor cell development","myotube cell development" )) %>%
mutate(gene_clusters = case_when(
NES > 0  ~ 'up-regulated',
NES < 0  ~ 'down-regulated'))
res_gse$log_padjust <- -log10(res_gse$p.adjust)
plot2 <- ggdotchart(res_gse, x = "Description", y = "log_padjust",
color = "gene_clusters",
palette = c("#00AFBB", "#FC4E07"),
sorting = "descending",
rotate = TRUE,
group = "gene_clusters",
dot.size = 6,
add = "segments",
title = "Enrichment RGCs vs RPCs",
xlab = "Pathways",
ylab = "-log10(padjust)",
ggtheme = theme_pubr()
)
plot2
plot1 + plot2
load("~/Documents/PhD_AI/sc_devil/results/fit_results/stat_test_retina_tissue3.Rdata")
View(stat_test_retina)
res <- subset(stat_test_retina, lfc >= -5)
# Filter DEG #
resSig_up <- subset(res, res$adj_pval < 0.05 & lfc > 0.5)
resSig_down <- subset(res, res$adj_pval < 0.05 & lfc < -0.5)
hs <- org.Hs.eg.db
deg <- rbind(resSig_down, resSig_up)
my_symbols <- deg$name
gene_list <- AnnotationDbi::select(hs,
keys = my_symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
gene_list <- na.omit(gene_list)
# Preparing input #
gene_list <- gene_list[!duplicated(gene_list$SYMBOL),]
gene_list <- gene_list[gene_list$SYMBOL %in% deg$name,]
gene_list_rank <- as.vector(deg$lfc)
names(gene_list_rank) <- gene_list$ENTREZID
gene_list_rank <- sort(gene_list_rank, decreasing = TRUE)
res_gseGO <- gseGO(geneList = gene_list_rank, ont = "BP", OrgDb = org.Hs.eg.db,
keyType = "ENTREZID", minGSSize = 10, maxGSSize = 350)
#Select enriched pathways
res_gse <- res_gseGO@result
View(res_gse)
#Select enriched pathways
res_gse <- res_gseGO@result
View(res_gse)
res_gse <- res_gse %>% mutate(gene_clusters = case_when(
NES > 0  ~ 'up-regulated',
NES < 0  ~ 'down-regulated'))
res_gse$log_padjust <- -log10(res_gse$p.adjust)
plot3 <- ggdotchart(res_gse, x = "Description", y = "log_padjust",
color = "gene_clusters",
palette = c("#00AFBB", "#FC4E07"),
sorting = "descending",
rotate = TRUE,
group = "gene_clusters",
dot.size = 6,
add = "segments",
title = "Macula vs Peripheral retina, RPCs",
xlab = "Pathways",
ylab = "-log10(padjust)",
ggtheme = theme_pubr()
)
plot3
load("~/Documents/PhD_AI/sc_devil/results/fit_results/stat_dev_stage_rpc.Rdata")
View(stat_test_retina)
res <- subset(stat_test_retina, lfc >= -5)
# Filter DEG #
resSig_up <- subset(res, res$adj_pval < 0.05 & lfc > 0.5)
resSig_down <- subset(res, res$adj_pval < 0.05 & lfc < -0.5)
deg <- rbind(resSig_down, resSig_up)
hs <- org.Hs.eg.db
my_symbols <- deg$name
gene_list <- AnnotationDbi::select(hs,
keys = my_symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
gene_list <- na.omit(gene_list)
# Preparing input #
gene_list <- gene_list[!duplicated(gene_list$SYMBOL),]
gene_list <- gene_list[gene_list$SYMBOL %in% deg$name,]
gene_list_rank <- as.vector(deg$lfc)
names(gene_list_rank) <- gene_list$ENTREZID
gene_list_rank <- sort(gene_list_rank, decreasing = TRUE)
res_gseGO <- gseGO(geneList = gene_list_rank, ont = "BP", OrgDb = org.Hs.eg.db,
keyType = "ENTREZID", minGSSize = 10, maxGSSize = 350)
#Select enriched pathways
res_gse <- res_gseGO@result
View(res_gse)
res_gse <- res_gse %>% mutate(gene_clusters = case_when(
NES > 0  ~ 'up-regulated',
NES < 0  ~ 'down-regulated'))
res_gse$log_padjust <- -log10(res_gse$p.adjust)
plot3 <- ggdotchart(res_gse, x = "Description", y = "log_padjust",
color = "gene_clusters",
palette = c("#00AFBB", "#FC4E07"),
sorting = "descending",
rotate = TRUE,
group = "gene_clusters",
dot.size = 6,
add = "segments",
title = "Late RPCs + Muller cells vs Early RPCs",
xlab = "Pathways",
ylab = "-log10(padjust)",
ggtheme = theme_pubr()
)
plot3
load("~/Documents/PhD_AI/sc_devil/data/metadata.Rdata")
metadata_filtered <- metadata %>%
filter(donor_id %in% c("Donor_1", "Donor_2", "Donor_3", "Donor_4", "Donor_5", "Donor_6", "Donor_7", "Donor_8",
"Donor_9", "Donor_10", "Donor_11", "Donor_12"),
cell_type %in% c("retinal progenitor cell", "retinal rod cell"),
sequencing_platform %in% c("Illumina NovaSeq 6000"))
load("~/Documents/PhD_AI/sc_devil/results/fit_results/stat_test_retina_tissue3.Rdata")
View(stat_test_retina)
load("~/Documents/PhD_AI/sc_devil/results/fit_results/stat_dev_stage_rpc.Rdata")
View(stat_test_retina)
load("~/Documents/PhD_AI/sc_devil/results/fit_results/stat_test_retina_cell_types1.Rdata")
View(stat_test_retina)
View(stat_test_retina)
load("~/Documents/PhD_AI/sc_devil/results/fit_results/stat_test_rod_cell_rpc.Rdata")
View(stat_test_retina)
res <- subset(stat_test_retina, lfc >= -5)
View(res)
res <- res %>% remove_rownames %>% column_to_rownames(var="name")
library(ggplot2)
library(ggmin)
library(tidyverse)
#BiocManager::install('EnhancedVolcano')
library(EnhancedVolcano)
library(ggrepel)
library(patchwork)
res <- res %>% remove_rownames %>% column_to_rownames(var="name")
p1 <- EnhancedVolcano::EnhancedVolcano(res,
lab = rownames(res),
x = 'lfc',
y = 'adj_pval',
selectLab = c("HES1", "ATOH7"),
xlab = bquote(~Log[2]~ 'fold change'),
pCutoff = 0.05,
FCcutoff = 0.5,
pointSize = 1.0,
labSize = 3.0,
labCol = 'black',
labFace = 'bold',
boxedLabels = TRUE,
col=c('black', 'black', 'black', 'purple'),
colAlpha = 4/5,
legendPosition = 'bottom',
legendLabSize = 10,
legendIconSize = 3.0,
subtitle = "",
gridlines.major = F, gridlines.minor = F,
border = 'full', borderWidth = 0.5, borderColour = 'black',
titleLabSize = 10,
drawConnectors = TRUE,
widthConnectors = 1.0,
colConnectors = 'black')
plot5 <- p1 + ggplot2::labs(title="Retinal rod cells vs RPCs (104 000 cells)") +
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
plot5
p1 <- EnhancedVolcano::EnhancedVolcano(res,
lab = rownames(res),
x = 'lfc',
y = 'adj_pval',
selectLab = c("HES1", "ATOH7", "ATP8A", "RD3", "RAX2", "NFIC", "ISL2"),
xlab = bquote(~Log[2]~ 'fold change'),
pCutoff = 0.05,
FCcutoff = 0.5,
pointSize = 1.0,
labSize = 3.0,
labCol = 'black',
labFace = 'bold',
boxedLabels = TRUE,
col=c('black', 'black', 'black', 'purple'),
colAlpha = 4/5,
legendPosition = 'bottom',
legendLabSize = 10,
legendIconSize = 3.0,
subtitle = "",
gridlines.major = F, gridlines.minor = F,
border = 'full', borderWidth = 0.5, borderColour = 'black',
titleLabSize = 10,
drawConnectors = TRUE,
widthConnectors = 1.0,
colConnectors = 'black')
plot5 <- p1 + ggplot2::labs(title="Retinal rod cells vs RPCs (104 000 cells)") +
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
plot5
p1 <- EnhancedVolcano::EnhancedVolcano(res,
lab = rownames(res),
x = 'lfc',
y = 'adj_pval',
selectLab = c("HES1", "ATOH7", "SFRP2", "ATP8A", "RD3", "RAX2", "NFIC", "ISL2"),
xlab = bquote(~Log[2]~ 'fold change'),
pCutoff = 0.05,
FCcutoff = 0.5,
pointSize = 1.0,
labSize = 3.0,
labCol = 'black',
labFace = 'bold',
boxedLabels = TRUE,
col=c('black', 'black', 'black', 'purple'),
colAlpha = 4/5,
legendPosition = 'bottom',
legendLabSize = 10,
legendIconSize = 3.0,
subtitle = "",
gridlines.major = F, gridlines.minor = F,
border = 'full', borderWidth = 0.5, borderColour = 'black',
titleLabSize = 10,
drawConnectors = TRUE,
widthConnectors = 1.0,
colConnectors = 'black')
plot5 <- p1 + ggplot2::labs(title="Retinal rod cells vs RPCs (104 000 cells)") +
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
plot5
load("~/Documents/PhD_AI/sc_devil/results/fit_results/stat_dev_stage_rpc.Rdata")
View(stat_test_retina)
load("~/Documents/PhD_AI/sc_devil/data/metadata.Rdata")
# Tissue specific filtering
metadata_filtered <- metadata %>%
filter(donor_id %in% c("Donor_1", "Donor_2", "Donor_3", "Donor_4", "Donor_5", "Donor_6", "Donor_7", "Donor_8"),
tissue %in% c("macula lutea", "peripheral region of retina"),
sequencing_platform %in% c("Illumina NovaSeq 6000"))
View(metadata_filtered)
View(metadata_filtered)
load("~/Documents/PhD_AI/sc_devil/rna_1.Rdata")
View(rna_1)
load("~/Documents/PhD_AI/sc_devil/rna_1.Rdata")
load("~/Documents/PhD_AI/sc_devil/rna_1.Rdata")
rna_1 <- as.matrix(rna_1)
View(rna_1)
gene_list1 <- c("FGF19", "CYP1B1", "CYP26A1", "DIO2", "CDKN1A", "ANXA2", "FRZB", "CRYAB", "HES1", "PTGDS",
"GPX3", "APOE", "FOXG1", "TBX20")
rna_1 <- subset(rna_1, rownames(rna_1) %in% gene_list1)
View(rna_1)
load("~/Documents/PhD_AI/sc_devil/metadata_f.Rdata")
View(metadata_f)
ann_col_info <- as.data.frame(metadata_f)
anno_info_colors <- list(tissue = c("macula lutea" = "lightblue",
"peripheral region of retina" = "red"))
plot1 <- pheatmap(rna_1,
cluster_rows = FALSE,
cluster_cols = FALSE,
show_rownames = TRUE,
show_colnames = FALSE,
scale = "row",
color =colorRampPalette(c("navy", "white", "firebrick3"))(50),
annotation_col = ann_col_info,
annotation_colors = anno_info_colors,
main = "DGE Macula lutea vs Peripheral retina, RPCs ")
### Heatmap of the most significant genes ###
library("ComplexHeatmap")
### Heatmap of the most significant genes ###
BiocManager::install("ComplexHeatmap")
library("RColorBrewer")
library("ComplexHeatmap")
library("circlize")
library("grid")
ann_col_info <- as.data.frame(metadata_f)
anno_info_colors <- list(tissue = c("macula lutea" = "lightblue",
"peripheral region of retina" = "red"))
plot1 <- pheatmap(rna_1,
cluster_rows = FALSE,
cluster_cols = FALSE,
show_rownames = TRUE,
show_colnames = FALSE,
scale = "row",
color =colorRampPalette(c("navy", "white", "firebrick3"))(50),
annotation_col = ann_col_info,
annotation_colors = anno_info_colors,
main = "DGE Macula lutea vs Peripheral retina, RPCs ")
plot1 <- pheatmap(rna_1,
cluster_rows = FALSE,
cluster_cols = FALSE,
show_rownames = TRUE,
show_colnames = FALSE,
scale = "row",
color =colorRampPalette(c("navy", "white", "firebrick3"))(50),
use_raster = TRUE,
annotation_col = ann_col_info,
annotation_colors = anno_info_colors,
main = "DGE Macula lutea vs Peripheral retina, RPCs ")
plot1
pheatmap(rna_1,
cluster_rows = FALSE,
cluster_cols = FALSE,
show_rownames = TRUE,
show_colnames = FALSE,
scale = "row",
color =colorRampPalette(c("navy", "white", "firebrick3"))(50),
use_raster = TRUE,
annotation_col = ann_col_info,
annotation_colors = anno_info_colors,
main = "DGE Macula lutea vs Peripheral retina, RPCs ")
Heatmap(rna_1, name = "Expression",
column_title = "DGE Macula lutea vs Peripheral retina, RPCs")
remove.packages("ComplexHeatmap")
### Heatmap of the most significant genes ###
BiocManager::install("ComplexHeatmap")
.rs.restartR()
library("ComplexHeatmap")
pheatmap(rna_1,
cluster_rows = FALSE,
cluster_cols = FALSE,
show_rownames = TRUE,
show_colnames = FALSE,
scale = "row",
color =colorRampPalette(c("navy", "white", "firebrick3"))(50),
use_raster = TRUE,
annotation_col = ann_col_info,
annotation_colors = anno_info_colors,
main = "DGE Macula lutea vs Peripheral retina, RPCs ")
pheatmap(rna_1,
cluster_rows = TRUE,
cluster_cols = FALSE,
show_rownames = TRUE,
show_colnames = FALSE,
scale = "row",
color =colorRampPalette(c("navy", "white", "firebrick3"))(50),
use_raster = TRUE,
annotation_col = ann_col_info,
annotation_colors = anno_info_colors,
main = "DGE Macula lutea vs Peripheral retina, RPCs ")
install.packages("magick")
pheatmap(rna_1,
cluster_rows = TRUE,
cluster_cols = FALSE,
show_rownames = TRUE,
show_colnames = FALSE,
scale = "row",
color =colorRampPalette(c("navy", "white", "firebrick3"))(50),
use_raster = TRUE,
annotation_col = ann_col_info,
annotation_colors = anno_info_colors,
main = "DGE Macula lutea vs Peripheral retina, RPCs ")
editor_options:
chunk_output_type: console
options(bitmapType='cairo')
#saving plot cluster
options(bitmapType='cairo')
png(file="heatmap1.png", width = 600, height = 600)
capabilities()
Cairo::CairoPDF()
install.packages("Cairo")
Cairo::CairoPDF()
library(Cairo)
library(Cairo)
remove.packages("Cairo")
install.packages("Cairo", repo="https://RForge.net")
install.packages("Cairo")
library("Cairo")
plot1 <- readRDS("~/Documents/PhD_AI/sc_devil/plot1.rds")
plot1
View(plot1)
ulimit -s
R --slave -e 'Cstack_info()["size"]'
ulimit -s 16384
pdf('heatmap.pdf', width=6, height=6)
plot1
library("Cairo")
capabilities()
library(Cairo)
remove.packages("Cairo")
