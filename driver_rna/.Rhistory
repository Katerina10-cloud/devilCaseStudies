xlab = bquote(~Log[2]~ 'fold change'),
pCutoff = 0.05,
FCcutoff = 0.5,
pointSize = 1.0,
labSize = 3.0,
labCol = 'black',
labFace = 'bold',
boxedLabels = TRUE,
col=c('black', 'black', 'black', 'purple'),
colAlpha = 4/5,
legendPosition = 'bottom',
legendLabSize = 10,
legendIconSize = 3.0,
#title = 'Devil: single patient (7400 cells)',
subtitle = "",
#legend=c("NS", "Log2 FC", "padj", "padj & Log2 FC"),
gridlines.major = F, gridlines.minor = F,
border = 'full', borderWidth = 0.5, borderColour = 'black',
titleLabSize = 10,
drawConnectors = TRUE,
widthConnectors = 1.0,
colConnectors = 'black')
plot <- p1 + ggplot2::labs(title="RGCs vs RPCs, (107 000 cells)") +
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
plot
plot
View(res)
res <- res %>% remove_rownames %>% column_to_rownames(var="name")
View(res)
p1 <- EnhancedVolcano::EnhancedVolcano(res,
lab = rownames(res),
x = 'lfc',
y = 'adj_pval',
selectLab = c("POU4F1", "POU6F2", "ISL1", "MYC", "EBF3", "HES1", "PTF1A", "NFIA"),
xlab = bquote(~Log[2]~ 'fold change'),
pCutoff = 0.05,
FCcutoff = 0.5,
pointSize = 1.0,
labSize = 3.0,
labCol = 'black',
labFace = 'bold',
boxedLabels = TRUE,
col=c('black', 'black', 'black', 'purple'),
colAlpha = 4/5,
legendPosition = 'bottom',
legendLabSize = 10,
legendIconSize = 3.0,
#title = 'Devil: single patient (7400 cells)',
subtitle = "",
#legend=c("NS", "Log2 FC", "padj", "padj & Log2 FC"),
gridlines.major = F, gridlines.minor = F,
border = 'full', borderWidth = 0.5, borderColour = 'black',
titleLabSize = 10,
drawConnectors = TRUE,
widthConnectors = 1.0,
colConnectors = 'black')
plot <- p1 + ggplot2::labs(title="RGCs vs RPCs, (107 000 cells)") +
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
plot
load("~/Documents/PhD_AI/sc_devil/data/metadata.Rdata")
# Filtering based on development stage
metadata_filtered <- metadata %>%
filter(donor_id %in% c("Donor_1", "Donor_2", "Donor_3", "Donor_4", "Donor_5", "Donor_6", "Donor_7", "Donor_8",
"Donor_9", "Donor_10", "Donor_11", "Donor_12"),
cell_type %in% c("retinal progenitor cell", "Mueller cell"),
sequencing_platform %in% c("Illumina NovaSeq 6000"))
View(metadata_filtered)
View(metadata_filtered)
metadata2 <- metadata_filtered %>%
mutate(cell_clusters = case_when(
cell_type == "9th week post-fertilization human stage"  ~ '0',
cell_type == "11th week post-fertilization human stage"  ~ '0',
cell_type == "12th week post-fertilization human stage"  ~ '0',
cell_type == "13th week post-fertilization human stage"  ~ '0',
cell_type == "14th week post-fertilization human stage"  ~ '0',
cell_type == "15th week post-fertilization human stage"  ~ '0',
cell_type == "17th week post-fertilization human stage"  ~ '1',
cell_type == "20th week post-fertilization human stage"  ~ '1',
cell_type == "21th week post-fertilization human stage"  ~ '1',
cell_type == "24th week post-fertilization human stage"  ~ '1',)) %>%
dplyr::select(c("cell_clusters", "cell_type"))
View(metadata2)
metadata2 <- metadata_filtered %>%
mutate(developmental_stage = case_when(
cell_type == "9th week post-fertilization human stage"  ~ '0',
cell_type == "11th week post-fertilization human stage"  ~ '0',
cell_type == "12th week post-fertilization human stage"  ~ '0',
cell_type == "13th week post-fertilization human stage"  ~ '0',
cell_type == "14th week post-fertilization human stage"  ~ '0',
cell_type == "15th week post-fertilization human stage"  ~ '0',
cell_type == "17th week post-fertilization human stage"  ~ '1',
cell_type == "20th week post-fertilization human stage"  ~ '1',
cell_type == "21th week post-fertilization human stage"  ~ '1',
cell_type == "24th week post-fertilization human stage"  ~ '1',)) %>%
dplyr::select(c("developmental_stage", "cell_type"))
View(metadata2)
metadata2 <- metadata_filtered %>%
mutate(development_stage = case_when(
cell_type == "9th week post-fertilization human stage"  ~ '0',
cell_type == "11th week post-fertilization human stage"  ~ '0',
cell_type == "12th week post-fertilization human stage"  ~ '0',
cell_type == "13th week post-fertilization human stage"  ~ '0',
cell_type == "14th week post-fertilization human stage"  ~ '0',
cell_type == "15th week post-fertilization human stage"  ~ '0',
cell_type == "17th week post-fertilization human stage"  ~ '1',
cell_type == "20th week post-fertilization human stage"  ~ '1',
cell_type == "21th week post-fertilization human stage"  ~ '1',
cell_type == "24th week post-fertilization human stage"  ~ '1',)) %>%
dplyr::select(c("development_stage", "cell_type"))
View(metadata2)
View(metadata_filtered)
metadata2 <- metadata_filtered %>%
mutate(development_stage = case_when(
development_stage == "9th week post-fertilization human stage"  ~ '0',
development_stage == "11th week post-fertilization human stage"  ~ '0',
development_stage == "12th week post-fertilization human stage"  ~ '0',
development_stage == "13th week post-fertilization human stage"  ~ '0',
development_stage == "14th week post-fertilization human stage"  ~ '0',
development_stage == "15th week post-fertilization human stage"  ~ '0',
development_stage == "17th week post-fertilization human stage"  ~ '1',
development_stage == "20th week post-fertilization human stage"  ~ '1',
development_stage == "21th week post-fertilization human stage"  ~ '1',
development_stage == "24th week post-fertilization human stage"  ~ '1',)) %>%
dplyr::select(c("development_stage", "cell_type"))
View(metadata2)
metadata2 <- metadata_filtered %>%
mutate(development_stage = case_when(
development_stage == "9th week post-fertilization human stage"  ~ '0',
development_stage == "11th week post-fertilization human stage"  ~ '0',
development_stage == "12th week post-fertilization human stage"  ~ '0',
development_stage == "13th week post-fertilization human stage"  ~ '0',
development_stage == "14th week post-fertilization human stage"  ~ '0',
development_stage == "15th week post-fertilization human stage"  ~ '0',
development_stage == "17th week post-fertilization human stage"  ~ '1',
development_stage == "20th week post-fertilization human stage"  ~ '1',
development_stage == "21th week post-fertilization human stage"  ~ '1',
development_stage == "24th week post-fertilization human stage"  ~ '1')) %>%
dplyr::select(c("development_stage", "cell_type"))
View(metadata2)
View(metadata_filtered)
metadata2 <- metadata_filtered %>%
mutate(development_stage = case_when(
development_stage == "9th week post-fertilization human stage"  ~ '0',
development_stage == "11th week post-fertilization human stage"  ~ '0',
development_stage == "12th week post-fertilization human stage"  ~ '0',
development_stage == "13th week post-fertilization human stage"  ~ '0',
development_stage == "14th week post-fertilization human stage"  ~ '0',
development_stage == "15th week post-fertilization human stage"  ~ '0',
development_stage == "17th week post-fertilization human stage"  ~ '1',
development_stage == "20th week post-fertilization human stage"  ~ '1',
development_stage == "21st week post-fertilization human stage"  ~ '1',
development_stage == "24th week post-fertilization human stage"  ~ '1')) %>%
dplyr::select(c("development_stage", "cell_type"))
View(metadata2)
metadata2 <- metadata_filtered %>%
mutate(development_stage = case_when(
development_stage == "9th week post-fertilization human stage"  ~ '0',
development_stage == "11th week post-fertilization human stage"  ~ '0',
development_stage == "12th week post-fertilization human stage"  ~ '0',
development_stage == "13th week post-fertilization human stage"  ~ '0',
development_stage == "14th week post-fertilization human stage"  ~ '0',
development_stage == "15th week post-fertilization human stage"  ~ '1',
development_stage == "17th week post-fertilization human stage"  ~ '1',
development_stage == "20th week post-fertilization human stage"  ~ '1',
development_stage == "21st week post-fertilization human stage"  ~ '1',
development_stage == "24th week post-fertilization human stage"  ~ '1')) %>%
dplyr::select(c("development_stage", "cell_type"))
View(metadata2)
metadata2 <- metadata_filtered %>%
mutate(development_stage = case_when(
development_stage == "9th week post-fertilization human stage" & cell_type == "retinal progenitor cell"  ~ '0',
development_stage == "11th week post-fertilization human stage" & cell_type == "retinal progenitor cell"~ '0',
development_stage == "12th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "13th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "14th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "15th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "17th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "20th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "21st week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "24th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
cell_type == "Mueller cell")) %>%
dplyr::select(c("development_stage", "cell_type"))
metadata2 <- metadata_filtered %>%
mutate(dev_stage = case_when(
development_stage == "9th week post-fertilization human stage" & cell_type == "retinal progenitor cell"  ~ '0',
development_stage == "11th week post-fertilization human stage" & cell_type == "retinal progenitor cell"~ '0',
development_stage == "12th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "13th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "14th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "15th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "17th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "20th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "21st week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "24th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
cell_type == "Mueller cell")) %>%
dplyr::select(c("dev_stage", "cell_type"))
metadata2 <- metadata_filtered %>%
mutate(dev_stage = case_when(
development_stage == "9th week post-fertilization human stage" & cell_type == "retinal progenitor cell"  ~ '0',
development_stage == "11th week post-fertilization human stage" & cell_type == "retinal progenitor cell"~ '0',
development_stage == "12th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "13th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "14th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "15th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "17th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "20th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "21st week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "24th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
cell_type == "Mueller cell" ~ '1')) %>%
dplyr::select(c("dev_stage", "cell_type"))
View(metadata2)
metadata2 <- metadata_filtered %>%
mutate(dev_stage = case_when(
development_stage == "9th week post-fertilization human stage" & cell_type == "retinal progenitor cell"  ~ '0',
development_stage == "11th week post-fertilization human stage" & cell_type == "retinal progenitor cell"~ '0',
development_stage == "12th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "13th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "14th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "15th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "17th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "20th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "21st week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "24th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
cell_type == "Mueller cell" ~ '1')) %>%
dplyr::select(c("dev_stage", "cell_type"))
View(metadata2)
metadata2 <- metadata_filtered %>%
mutate(dev_stage = case_when(
development_stage == "9th week post-fertilization human stage" & cell_type == "retinal progenitor cell"  ~ '0',
development_stage == "11th week post-fertilization human stage" & cell_type == "retinal progenitor cell"~ '0',
development_stage == "12th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "13th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "14th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "15th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "17th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "20th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "21st week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "24th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
cell_type == "Mueller cell" ~ '1')) %>%
dplyr::select(c("dev_stage", "cell_type"))
View(metadata2)
metadata2 <- metadata_filtered %>%
mutate(dev_stage = case_when(
development_stage == "9th week post-fertilization human stage" & cell_type == "retinal progenitor cell"  ~ '0',
development_stage == "11th week post-fertilization human stage" & cell_type == "retinal progenitor cell"~ '0',
development_stage == "12th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "13th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "14th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "15th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "17th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "20th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "21st week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "24th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
cell_type == "Mueller cell" ~ '1')) %>%
dplyr::select(c("dev_stage", "cell_type"))
View(metadata2)
metadata2 <- metadata_filtered %>%
mutate(dev_stage = case_when(
development_stage == "9th week post-fertilization human stage" & cell_type == "retinal progenitor cell"  ~ '0',
development_stage == "11th week post-fertilization human stage" & cell_type == "retinal progenitor cell"~ '0',
development_stage == "12th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "13th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "14th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '0',
development_stage == "15th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "17th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "20th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "21st week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
development_stage == "24th week post-fertilization human stage" & cell_type == "retinal progenitor cell" ~ '1',
cell_type == "Mueller cell" ~ '1')) %>%
dplyr::select(c("dev_stage", "cell_type"))
View(metadata2)
load("~/Documents/PhD_AI/sc_devil/results/fit_results/stat_test_retina_tissue3.Rdata")
load("~/Documents/PhD_AI/sc_devil/results/fit_results/stat_test_retina_cell_types2.Rdata")
View(stat_test_retina)
#res <- res[!rownames(res) %in% c(), ]
res <- subset(stat_test_retina lfc <= 5)
#res <- res[!rownames(res) %in% c(), ]
res <- subset(stat_test_retina, lfc <= 5)
View(res)
#res <- res[!rownames(res) %in% c(), ]
res <- subset(stat_test_retina, lfc >= -5)
View(res)
# Filter DEG #
resSig_up <- subset(res, res$adj_pval < 0.05 & lfc > 0.5)
resSig_down <- subset(res, res$adj_pval < 0.05 & lfc < -0.5)
deg <- rbind(resSig_down, resSig_up)
# Convert Gene symbols to EntrezID #
#BiocManager::install("org.Hs.eg.db")
library(org.Hs.eg.db)
hs <- org.Hs.eg.db
gene_list <- select(hs,
keys = my_symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
my_symbols <- deg$name
gene_list <- select(hs,
keys = my_symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
gene_list <- na.omit(gene_list)
View(gene_list)
# GSEA using fsea #
#BiocManager::install("fgsea")
#BiocManager::install("reactome.db")
library(reactome.db)
library(fgsea)
library(data.table)
library(ggplot2)
library(tidyverse)
# Preparing input #
gene_list <- gene_list[!duplicated(gene_list$SYMBOL),]
gene_list <- gene_list[gene_list$SYMBOL %in% deg$name,]
gene_list_rank <- as.vector(deg$lfc)
names(gene_list_rank) <- gene_list$ENTREZID
gene_list_rank <- sort(gene_list_rank, decreasing = TRUE)
# Running fgsea #
pathways <- reactomePathways(names(gene_list_rank))
fseaRes <- fgsea::fgsea(pathways = pathways,
stats = gene_list_rank,
minSize = 15,
maxSize = 500)
# Make table plot for a bunch of selected pathways #
topPathwaysUp <- fseaRes[ES > 0][head(order(pval), n=10), pathway]
topPathwaysDown <- fseaRes[ES < 0][head(order(pval), n=10), pathway]
plot_fgsea <- plotGseaTable(pathways[topPathwaysUp], gene_list_rank, fseaRes, gseaParam = 0.5)
plot_fgsea
plot_fgsea <- plotGseaTable(pathways[topPathwaysDown], gene_list_rank, fseaRes, gseaParam = 0.5)
plot_fgsea
plot_fgsea <- plotGseaTable(pathways[topPathwaysUp], gene_list_rank, fseaRes, gseaParam = 0.5)
plot_fgsea
# Make table plot for a bunch of selected pathways #
topPathwaysUp <- fseaRes[ES > 0][head(order(pval), n=5), pathway]
topPathwaysDown <- fseaRes[ES < 0][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
plot_fgsea <- plotGseaTable(pathways[topPathwaysUp], gene_list_rank, fseaRes, gseaParam = 0.5)
plot_fgsea
plot_fgsea <- plotGseaTable(pathways[topPathway], gene_list_rank, fseaRes, gseaParam = 0.5)
plot_fgsea <- plotGseaTable(pathways[topPathways], gene_list_rank, fseaRes, gseaParam = 0.5)
plot_fgsea
load("~/Documents/PhD_AI/sc_devil/results/fit_results/stat_dev_stage_rpc.Rdata")
View(stat_test_retina)
res <- stat_test_retina %>% remove_rownames %>% column_to_rownames(var="name")
plot <- p1 + ggplot2::labs(title="Early RPCs vs Late RPCs + Muller cells, (75 000 cells)") +
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
p1 <- EnhancedVolcano::EnhancedVolcano(res,
lab = rownames(res),
x = 'lfc',
y = 'adj_pval',
selectLab = c("PTGDS", "NETO1", "FOS", "PID1", "NFIB", "FGF19", "HAS2", "ZNF676"),
xlab = bquote(~Log[2]~ 'fold change'),
pCutoff = 0.05,
FCcutoff = 0.5,
pointSize = 1.0,
labSize = 3.0,
labCol = 'black',
labFace = 'bold',
boxedLabels = TRUE,
col=c('black', 'black', 'black', 'purple'),
colAlpha = 4/5,
legendPosition = 'bottom',
legendLabSize = 10,
legendIconSize = 3.0,
#title = 'Devil: single patient (7400 cells)',
subtitle = "",
#legend=c("NS", "Log2 FC", "padj", "padj & Log2 FC"),
gridlines.major = F, gridlines.minor = F,
border = 'full', borderWidth = 0.5, borderColour = 'black',
titleLabSize = 10,
drawConnectors = TRUE,
widthConnectors = 1.0,
colConnectors = 'black')
plot <- p1 + ggplot2::labs(title="Early RPCs vs Late RPCs + Muller cells, (75 000 cells)") +
theme(plot.title=element_text(hjust=0.5, vjust=0.5))
plot
hs <- org.Hs.eg.db
my_symbols <- deg$name
# Filter DEG #
resSig_up <- subset(res, res$adj_pval < 0.05 & lfc > 0.5)
resSig_down <- subset(res, res$adj_pval < 0.05 & lfc < -0.5)
deg <- rbind(resSig_down, resSig_up)
hs <- org.Hs.eg.db
my_symbols <- deg$name
gene_list <- select(hs,
keys = my_symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
# Filter DEG #
resSig_up <- subset(res, res$adj_pval < 0.05 & lfc > 0.5)
resSig_down <- subset(res, res$adj_pval < 0.05 & lfc < -0.5)
deg <- rbind(resSig_down, resSig_up)
View(deg)
hs <- org.Hs.eg.db
my_symbols <- deg$name
gene_list <- select(hs,
keys = my_symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
View(deg)
# Filter DEG #
resSig_up <- subset(stat_test_retina, stat_test_retina$adj_pval < 0.05 & lfc > 0.5)
resSig_down <- subset(stat_test_retina, stat_test_retina$adj_pval < 0.05 & lfc < -0.5)
deg <- rbind(resSig_down, resSig_up)
hs <- org.Hs.eg.db
my_symbols <- deg$name
gene_list <- select(hs,
keys = my_symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
gene_list <- na.omit(gene_list)
# Preparing input #
gene_list <- gene_list[!duplicated(gene_list$SYMBOL),]
gene_list <- gene_list[gene_list$SYMBOL %in% deg$name,]
gene_list_rank <- as.vector(deg$lfc)
names(gene_list_rank) <- gene_list$ENTREZID
gene_list_rank <- sort(gene_list_rank, decreasing = TRUE)
# Running fgsea #
pathways <- reactomePathways(names(gene_list_rank))
fseaRes <- fgsea::fgsea(pathways = pathways,
stats = gene_list_rank,
minSize = 15,
maxSize = 500)
# Make table plot for a bunch of selected pathways #
topPathwaysUp <- fseaRes[ES > 0][head(order(pval), n=5), pathway]
topPathwaysDown <- fseaRes[ES < 0][head(order(pval), n=5), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
plot_fgsea <- plotGseaTable(pathways[topPathways], gene_list_rank, fseaRes, gseaParam = 0.5)
plot_fgsea
# Make table plot for a bunch of selected pathways #
topPathwaysUp <- fseaRes[ES > 0][head(order(pval), n=10), pathway]
topPathwaysDown <- fseaRes[ES < 0][head(order(pval), n=10), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
plot_fgsea <- plotGseaTable(pathways[topPathways], gene_list_rank, fseaRes, gseaParam = 0.5)
plot_fgsea
fseaRes <- fgsea::fgsea(pathways = pathways,
stats = gene_list_rank,
minSize = 15,
maxSize = 350)
# Make table plot for a bunch of selected pathways #
topPathwaysUp <- fseaRes[ES > 0][head(order(pval), n=10), pathway]
topPathwaysDown <- fseaRes[ES < 0][head(order(pval), n=10), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
plot_fgsea <- plotGseaTable(pathways[topPathways], gene_list_rank, fseaRes, gseaParam = 0.5)
plot_fgsea
load("~/Documents/PhD_AI/sc_devil/results/fit_results/stat_test_retina_cell_types1.Rdata")
load("~/Documents/PhD_AI/sc_devil/results/fit_results/stat_test_retina_cell_types1.Rdata")
View(stat_test_retina)
#res <- res[!rownames(res) %in% c(), ]
res <- subset(stat_test_retina, lfc >= -5)
View(res)
# Filter DEG #
resSig_up <- subset(res, res$adj_pval < 0.05 & lfc > 0.5)
resSig_down <- subset(res, res$adj_pval < 0.05 & lfc < -0.5)
deg <- rbind(resSig_down, resSig_up)
hs <- org.Hs.eg.db
my_symbols <- deg$name
gene_list <- select(hs,
keys = my_symbols,
columns = c("ENTREZID", "SYMBOL"),
keytype = "SYMBOL")
gene_list <- na.omit(gene_list)
# Preparing input #
gene_list <- gene_list[!duplicated(gene_list$SYMBOL),]
gene_list <- gene_list[gene_list$SYMBOL %in% deg$name,]
gene_list_rank <- as.vector(deg$lfc)
names(gene_list_rank) <- gene_list$ENTREZID
gene_list_rank <- sort(gene_list_rank, decreasing = TRUE)
fseaRes <- fgsea::fgsea(pathways = pathways,
stats = gene_list_rank,
minSize = 15,
maxSize = 350)
# Running fgsea #
pathways <- reactomePathways(names(gene_list_rank))
fseaRes <- fgsea::fgsea(pathways = pathways,
stats = gene_list_rank,
minSize = 15,
maxSize = 350)
# Make table plot for a bunch of selected pathways #
topPathwaysUp <- fseaRes[ES > 0][head(order(pval), n=10), pathway]
topPathwaysDown <- fseaRes[ES < 0][head(order(pval), n=10), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
plot_fgsea <- plotGseaTable(pathways[topPathways], gene_list_rank, fseaRes, gseaParam = 0.5)
plot_fgsea
# Make table plot for a bunch of selected pathways #
topPathwaysUp <- fseaRes[ES > 0][head(order(pval), n=7), pathway]
topPathwaysDown <- fseaRes[ES < 0][head(order(pval), n=9), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
plot_fgsea <- plotGseaTable(pathways[topPathways], gene_list_rank, fseaRes, gseaParam = 0.5)
plot_fgsea
# Make table plot for a bunch of selected pathways #
topPathwaysUp <- fseaRes[ES > 0][head(order(pval), n=7), pathway]
topPathwaysDown <- fseaRes[ES < 0][head(order(pval), n=8), pathway]
topPathways <- c(topPathwaysUp, rev(topPathwaysDown))
plot_fgsea <- plotGseaTable(pathways[topPathways], gene_list_rank, fseaRes, gseaParam = 0.5)
plot_fgsea
# Remove redundant terms #
collapsePathways <- collapsePathways(fseaRes[order(pval)][padj < 0.01],
pathways, gene_list_rank)
# Make table plot for a bunch of selected pathways #
topPathwaysUp <- fseaRes[ES > 0][head(order(pval), n=7), pathway]
topPathwaysDown <- fseaRes[ES < 0][head(order(pval), n=9), pathway]
topPathways <- c(topPathwaysUp, topPathwaysDown)
plot_fgsea <- plotGseaTable(pathways[topPathways], gene_list_rank, fseaRes, gseaParam = 0.5)
plot_fgsea
# Make table plot for a bunch of selected pathways #
topPathwaysUp <- fseaRes[ES > 0][head(order(pval), n=7), pathway]
topPathwaysDown <- fseaRes[ES < 0][head(order(pval), n=7), pathway]
topPathways <- c(topPathwaysUp, topPathwaysDown)
plot_fgsea <- plotGseaTable(pathways[topPathways], gene_list_rank, fseaRes, gseaParam = 0.5)
plot_fgsea
# Remove redundant terms #
collapsePathways <- collapsePathways(fseaRes[order(pval)][padj < 0.01],
pathways, gene_list_rank)
